// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v6.30.0
// source: src/server/node/log.proto

package logpb

import (
	editorpb "editor-service/protos/editorpb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Log struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Cmd:
	//
	//	*Log_Share
	//	*Log_Delete
	//	*Log_Edit
	Cmd           isLog_Cmd `protobuf_oneof:"cmd"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Log) Reset() {
	*x = Log{}
	mi := &file_src_server_node_log_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Log) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Log) ProtoMessage() {}

func (x *Log) ProtoReflect() protoreflect.Message {
	mi := &file_src_server_node_log_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Log.ProtoReflect.Descriptor instead.
func (*Log) Descriptor() ([]byte, []int) {
	return file_src_server_node_log_proto_rawDescGZIP(), []int{0}
}

func (x *Log) GetCmd() isLog_Cmd {
	if x != nil {
		return x.Cmd
	}
	return nil
}

func (x *Log) GetShare() *Share {
	if x != nil {
		if x, ok := x.Cmd.(*Log_Share); ok {
			return x.Share
		}
	}
	return nil
}

func (x *Log) GetDelete() *Delete {
	if x != nil {
		if x, ok := x.Cmd.(*Log_Delete); ok {
			return x.Delete
		}
	}
	return nil
}

func (x *Log) GetEdit() *Edit {
	if x != nil {
		if x, ok := x.Cmd.(*Log_Edit); ok {
			return x.Edit
		}
	}
	return nil
}

type isLog_Cmd interface {
	isLog_Cmd()
}

type Log_Share struct {
	Share *Share `protobuf:"bytes,1,opt,name=share,proto3,oneof"`
}

type Log_Delete struct {
	Delete *Delete `protobuf:"bytes,2,opt,name=delete,proto3,oneof"`
}

type Log_Edit struct {
	Edit *Edit `protobuf:"bytes,3,opt,name=edit,proto3,oneof"`
}

func (*Log_Share) isLog_Cmd() {}

func (*Log_Delete) isLog_Cmd() {}

func (*Log_Edit) isLog_Cmd() {}

type Share struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DocId         string                 `protobuf:"bytes,1,opt,name=doc_id,json=docId,proto3" json:"doc_id,omitempty"`
	DocName       string                 `protobuf:"bytes,2,opt,name=doc_name,json=docName,proto3" json:"doc_name,omitempty"`
	Doc           []byte                 `protobuf:"bytes,3,opt,name=doc,proto3" json:"doc,omitempty"`
	UserId        string                 `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Share) Reset() {
	*x = Share{}
	mi := &file_src_server_node_log_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Share) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Share) ProtoMessage() {}

func (x *Share) ProtoReflect() protoreflect.Message {
	mi := &file_src_server_node_log_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Share.ProtoReflect.Descriptor instead.
func (*Share) Descriptor() ([]byte, []int) {
	return file_src_server_node_log_proto_rawDescGZIP(), []int{1}
}

func (x *Share) GetDocId() string {
	if x != nil {
		return x.DocId
	}
	return ""
}

func (x *Share) GetDocName() string {
	if x != nil {
		return x.DocName
	}
	return ""
}

func (x *Share) GetDoc() []byte {
	if x != nil {
		return x.Doc
	}
	return nil
}

func (x *Share) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type Delete struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DocId         string                 `protobuf:"bytes,1,opt,name=doc_id,json=docId,proto3" json:"doc_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Delete) Reset() {
	*x = Delete{}
	mi := &file_src_server_node_log_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Delete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Delete) ProtoMessage() {}

func (x *Delete) ProtoReflect() protoreflect.Message {
	mi := &file_src_server_node_log_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Delete.ProtoReflect.Descriptor instead.
func (*Delete) Descriptor() ([]byte, []int) {
	return file_src_server_node_log_proto_rawDescGZIP(), []int{2}
}

func (x *Delete) GetDocId() string {
	if x != nil {
		return x.DocId
	}
	return ""
}

func (x *Delete) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type Edit struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DocId         string                 `protobuf:"bytes,1,opt,name=doc_id,json=docId,proto3" json:"doc_id,omitempty"`
	Rev           int32                  `protobuf:"varint,2,opt,name=rev,proto3" json:"rev,omitempty"`
	Ops           []*editorpb.Op         `protobuf:"bytes,3,rep,name=ops,proto3" json:"ops,omitempty"`
	UserId        string                 `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Edit) Reset() {
	*x = Edit{}
	mi := &file_src_server_node_log_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Edit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Edit) ProtoMessage() {}

func (x *Edit) ProtoReflect() protoreflect.Message {
	mi := &file_src_server_node_log_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Edit.ProtoReflect.Descriptor instead.
func (*Edit) Descriptor() ([]byte, []int) {
	return file_src_server_node_log_proto_rawDescGZIP(), []int{3}
}

func (x *Edit) GetDocId() string {
	if x != nil {
		return x.DocId
	}
	return ""
}

func (x *Edit) GetRev() int32 {
	if x != nil {
		return x.Rev
	}
	return 0
}

func (x *Edit) GetOps() []*editorpb.Op {
	if x != nil {
		return x.Ops
	}
	return nil
}

func (x *Edit) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

var File_src_server_node_log_proto protoreflect.FileDescriptor

var file_src_server_node_log_proto_rawDesc = string([]byte{
	0x0a, 0x19, 0x73, 0x72, 0x63, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x6e, 0x6f, 0x64,
	0x65, 0x2f, 0x6c, 0x6f, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x72, 0x6c, 0x6f,
	0x67, 0x1a, 0x13, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7b, 0x0a, 0x03, 0x4c, 0x6f, 0x67, 0x12, 0x23, 0x0a,
	0x05, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x72,
	0x6c, 0x6f, 0x67, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x48, 0x00, 0x52, 0x05, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x72, 0x6c, 0x6f, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x48, 0x00, 0x52, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x04, 0x65, 0x64,
	0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x72, 0x6c, 0x6f, 0x67, 0x2e,
	0x45, 0x64, 0x69, 0x74, 0x48, 0x00, 0x52, 0x04, 0x65, 0x64, 0x69, 0x74, 0x42, 0x05, 0x0a, 0x03,
	0x63, 0x6d, 0x64, 0x22, 0x64, 0x0a, 0x05, 0x53, 0x68, 0x61, 0x72, 0x65, 0x12, 0x15, 0x0a, 0x06,
	0x64, 0x6f, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x6f,
	0x63, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x6f, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x6f, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x64, 0x6f, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x64, 0x6f, 0x63,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x38, 0x0a, 0x06, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x64, 0x6f, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x6f, 0x63, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x66, 0x0a, 0x04, 0x45, 0x64, 0x69, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x64,
	0x6f, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x6f, 0x63,
	0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x76, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x72, 0x65, 0x76, 0x12, 0x1c, 0x0a, 0x03, 0x6f, 0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x4f, 0x70, 0x52, 0x03, 0x6f,
	0x70, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x42, 0x1d, 0x5a, 0x1b, 0x65,
	0x64, 0x69, 0x74, 0x6f, 0x72, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x6c, 0x6f, 0x67, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
})

var (
	file_src_server_node_log_proto_rawDescOnce sync.Once
	file_src_server_node_log_proto_rawDescData []byte
)

func file_src_server_node_log_proto_rawDescGZIP() []byte {
	file_src_server_node_log_proto_rawDescOnce.Do(func() {
		file_src_server_node_log_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_src_server_node_log_proto_rawDesc), len(file_src_server_node_log_proto_rawDesc)))
	})
	return file_src_server_node_log_proto_rawDescData
}

var file_src_server_node_log_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_src_server_node_log_proto_goTypes = []any{
	(*Log)(nil),         // 0: rlog.Log
	(*Share)(nil),       // 1: rlog.Share
	(*Delete)(nil),      // 2: rlog.Delete
	(*Edit)(nil),        // 3: rlog.Edit
	(*editorpb.Op)(nil), // 4: editor.Op
}
var file_src_server_node_log_proto_depIdxs = []int32{
	1, // 0: rlog.Log.share:type_name -> rlog.Share
	2, // 1: rlog.Log.delete:type_name -> rlog.Delete
	3, // 2: rlog.Log.edit:type_name -> rlog.Edit
	4, // 3: rlog.Edit.ops:type_name -> editor.Op
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_src_server_node_log_proto_init() }
func file_src_server_node_log_proto_init() {
	if File_src_server_node_log_proto != nil {
		return
	}
	file_src_server_node_log_proto_msgTypes[0].OneofWrappers = []any{
		(*Log_Share)(nil),
		(*Log_Delete)(nil),
		(*Log_Edit)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_src_server_node_log_proto_rawDesc), len(file_src_server_node_log_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_src_server_node_log_proto_goTypes,
		DependencyIndexes: file_src_server_node_log_proto_depIdxs,
		MessageInfos:      file_src_server_node_log_proto_msgTypes,
	}.Build()
	File_src_server_node_log_proto = out.File
	file_src_server_node_log_proto_goTypes = nil
	file_src_server_node_log_proto_depIdxs = nil
}
